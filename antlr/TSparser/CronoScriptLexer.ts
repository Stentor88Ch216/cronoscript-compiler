// Generated from CronoScript.g4 by ANTLR 4.9.0-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class CronoScriptLexer extends Lexer {
	public static readonly T__0 = 1;
	public static readonly T__1 = 2;
	public static readonly T__2 = 3;
	public static readonly T__3 = 4;
	public static readonly T__4 = 5;
	public static readonly COMMA = 6;
	public static readonly TO = 7;
	public static readonly TOPLUS = 8;
	public static readonly DELAY = 9;
	public static readonly DELAYPLUS = 10;
	public static readonly DELAYMINUS = 11;
	public static readonly PLUS = 12;
	public static readonly MINUS = 13;
	public static readonly MULT = 14;
	public static readonly DIV = 15;
	public static readonly EQUALS = 16;
	public static readonly STRING_KW = 17;
	public static readonly DATE_KW = 18;
	public static readonly GROUP_KW = 19;
	public static readonly DURATION_KW = 20;
	public static readonly VAR = 21;
	public static readonly HASH = 22;
	public static readonly AT = 23;
	public static readonly KEY = 24;
	public static readonly DATE = 25;
	public static readonly STRING = 26;
	public static readonly DURATION = 27;
	public static readonly ID = 28;
	public static readonly INT = 29;
	public static readonly COMMENT = 30;
	public static readonly WS = 31;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "T__3", "T__4", "COMMA", "TO", "TOPLUS", "DELAY", 
		"DELAYPLUS", "DELAYMINUS", "PLUS", "MINUS", "MULT", "DIV", "EQUALS", "STRING_KW", 
		"DATE_KW", "GROUP_KW", "DURATION_KW", "VAR", "HASH", "AT", "KEY", "DATE", 
		"STRING", "DURATION", "ID", "INT", "COMMENT", "WS",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "'['", "']'", "'('", "')'", "':'", "','", "'->'", "'->+'", 
		"'...'", undefined, undefined, "'+'", "'-'", "'*'", "'/'", "'='", "'string'", 
		"'date'", "'group'", "'duration'", "'var'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, undefined, undefined, undefined, "COMMA", 
		"TO", "TOPLUS", "DELAY", "DELAYPLUS", "DELAYMINUS", "PLUS", "MINUS", "MULT", 
		"DIV", "EQUALS", "STRING_KW", "DATE_KW", "GROUP_KW", "DURATION_KW", "VAR", 
		"HASH", "AT", "KEY", "DATE", "STRING", "DURATION", "ID", "INT", "COMMENT", 
		"WS",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(CronoScriptLexer._LITERAL_NAMES, CronoScriptLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return CronoScriptLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(CronoScriptLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "CronoScript.g4"; }

	// @Override
	public get ruleNames(): string[] { return CronoScriptLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return CronoScriptLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return CronoScriptLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return CronoScriptLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02!\xEB\b\x01\x04" +
		"\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06\x04" +
		"\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r\t\r" +
		"\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t\x12" +
		"\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t\x17" +
		"\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t\x1C" +
		"\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x03\x02\x03\x02\x03" +
		"\x03\x03\x03\x03\x04\x03\x04\x03\x05\x03\x05\x03\x06\x03\x06\x03\x07\x03" +
		"\x07\x03\b\x03\b\x03\b\x03\t\x03\t\x03\t\x03\t\x03\n\x03\n\x03\n\x03\n" +
		"\x03\v\x03\v\x03\v\x03\v\x03\v\x03\v\x03\v\x03\v\x03\v\x03\v\x03\v\x03" +
		"\v\x05\ve\n\v\x03\f\x03\f\x03\f\x03\f\x03\f\x03\f\x03\f\x03\f\x03\f\x03" +
		"\f\x03\f\x03\f\x05\fs\n\f\x03\r\x03\r\x03\x0E\x03\x0E\x03\x0F\x03\x0F" +
		"\x03\x10\x03\x10\x03\x11\x03\x11\x03\x12\x03\x12\x03\x12\x03\x12\x03\x12" +
		"\x03\x12\x03\x12\x03\x13\x03\x13\x03\x13\x03\x13\x03\x13\x03\x14\x03\x14" +
		"\x03\x14\x03\x14\x03\x14\x03\x14\x03\x15\x03\x15\x03\x15\x03\x15\x03\x15" +
		"\x03\x15\x03\x15\x03\x15\x03\x15\x03\x16\x03\x16\x03\x16\x03\x16\x03\x17" +
		"\x03\x17\x03\x17\x03\x17\x05\x17\xA2\n\x17\x03\x18\x03\x18\x03\x18\x03" +
		"\x19\x06\x19\xA8\n\x19\r\x19\x0E\x19\xA9\x03\x1A\x03\x1A\x06\x1A\xAE\n" +
		"\x1A\r\x1A\x0E\x1A\xAF\x03\x1A\x03\x1A\x03\x1B\x03\x1B\x07\x1B\xB6\n\x1B" +
		"\f\x1B\x0E\x1B\xB9\v\x1B\x03\x1B\x03\x1B\x03\x1C\x03\x1C\x03\x1C\x03\x1C" +
		"\x03\x1D\x03\x1D\x07\x1D\xC3\n\x1D\f\x1D\x0E\x1D\xC6\v\x1D\x03\x1E\x06" +
		"\x1E\xC9\n\x1E\r\x1E\x0E\x1E\xCA\x03\x1F\x03\x1F\x03\x1F\x03\x1F\x07\x1F" +
		"\xD1\n\x1F\f\x1F\x0E\x1F\xD4\v\x1F\x03\x1F\x03\x1F\x03\x1F\x03\x1F\x07" +
		"\x1F\xDA\n\x1F\f\x1F\x0E\x1F\xDD\v\x1F\x03\x1F\x03\x1F\x05\x1F\xE1\n\x1F" +
		"\x03\x1F\x03\x1F\x03 \x06 \xE6\n \r \x0E \xE7\x03 \x03 \x03\xDB\x02\x02" +
		"!\x03\x02\x03\x05\x02\x04\x07\x02\x05\t\x02\x06\v\x02\x07\r\x02\b\x0F" +
		"\x02\t\x11\x02\n\x13\x02\v\x15\x02\f\x17\x02\r\x19\x02\x0E\x1B\x02\x0F" +
		"\x1D\x02\x10\x1F\x02\x11!\x02\x12#\x02\x13%\x02\x14\'\x02\x15)\x02\x16" +
		"+\x02\x17-\x02\x18/\x02\x191\x02\x1A3\x02\x1B5\x02\x1C7\x02\x1D9\x02\x1E" +
		";\x02\x1F=\x02 ?\x02!\x03\x02\n\x07\x02//1;C\\aac|\x06\x02\v\f\x0F\x0F" +
		"))^^\x06\x02\f\f\x0F\x0F$$^^\x05\x02C\\aac|\x06\x022;C\\aac|\x03\x022" +
		";\x04\x02\f\f\x0F\x0F\x05\x02\v\f\x0F\x0F\"\"\x02\xF8\x02\x03\x03\x02" +
		"\x02\x02\x02\x05\x03\x02\x02\x02\x02\x07\x03\x02\x02\x02\x02\t\x03\x02" +
		"\x02\x02\x02\v\x03\x02\x02\x02\x02\r\x03\x02\x02\x02\x02\x0F\x03\x02\x02" +
		"\x02\x02\x11\x03\x02\x02\x02\x02\x13\x03\x02\x02\x02\x02\x15\x03\x02\x02" +
		"\x02\x02\x17\x03\x02\x02\x02\x02\x19\x03\x02\x02\x02\x02\x1B\x03\x02\x02" +
		"\x02\x02\x1D\x03\x02\x02\x02\x02\x1F\x03\x02\x02\x02\x02!\x03\x02\x02" +
		"\x02\x02#\x03\x02\x02\x02\x02%\x03\x02\x02\x02\x02\'\x03\x02\x02\x02\x02" +
		")\x03\x02\x02\x02\x02+\x03\x02\x02\x02\x02-\x03\x02\x02\x02\x02/\x03\x02" +
		"\x02\x02\x021\x03\x02\x02\x02\x023\x03\x02\x02\x02\x025\x03\x02\x02\x02" +
		"\x027\x03\x02\x02\x02\x029\x03\x02\x02\x02\x02;\x03\x02\x02\x02\x02=\x03" +
		"\x02\x02\x02\x02?\x03\x02\x02\x02\x03A\x03\x02\x02\x02\x05C\x03\x02\x02" +
		"\x02\x07E\x03\x02\x02\x02\tG\x03\x02\x02\x02\vI\x03\x02\x02\x02\rK\x03" +
		"\x02\x02\x02\x0FM\x03\x02\x02\x02\x11P\x03\x02\x02\x02\x13T\x03\x02\x02" +
		"\x02\x15d\x03\x02\x02\x02\x17r\x03\x02\x02\x02\x19t\x03\x02\x02\x02\x1B" +
		"v\x03\x02\x02\x02\x1Dx\x03\x02\x02\x02\x1Fz\x03\x02\x02\x02!|\x03\x02" +
		"\x02\x02#~\x03\x02\x02\x02%\x85\x03\x02\x02\x02\'\x8A\x03\x02\x02\x02" +
		")\x90\x03\x02\x02\x02+\x99\x03\x02\x02\x02-\x9D\x03\x02\x02\x02/\xA3\x03" +
		"\x02\x02\x021\xA7\x03\x02\x02\x023\xAB\x03\x02\x02\x025\xB3\x03\x02\x02" +
		"\x027\xBC\x03\x02\x02\x029\xC0\x03\x02\x02\x02;\xC8\x03\x02\x02\x02=\xE0" +
		"\x03\x02\x02\x02?\xE5\x03\x02\x02\x02AB\x07]\x02\x02B\x04\x03\x02\x02" +
		"\x02CD\x07_\x02\x02D\x06\x03\x02\x02\x02EF\x07*\x02\x02F\b\x03\x02\x02" +
		"\x02GH\x07+\x02\x02H\n\x03\x02\x02\x02IJ\x07<\x02\x02J\f\x03\x02\x02\x02" +
		"KL\x07.\x02\x02L\x0E\x03\x02\x02\x02MN\x07/\x02\x02NO\x07@\x02\x02O\x10" +
		"\x03\x02\x02\x02PQ\x07/\x02\x02QR\x07@\x02\x02RS\x07-\x02\x02S\x12\x03" +
		"\x02\x02\x02TU\x070\x02\x02UV\x070\x02\x02VW\x070\x02\x02W\x14\x03\x02" +
		"\x02\x02XY\x070\x02\x02YZ\x070\x02\x02Z[\x070\x02\x02[e\x07-\x02\x02\\" +
		"]\x070\x02\x02]^\x070\x02\x02^_\x070\x02\x02_`\x07\"\x02\x02`e\x07-\x02" +
		"\x02ab\x070\x02\x02bc\x070\x02\x02ce\x07-\x02\x02dX\x03\x02\x02\x02d\\" +
		"\x03\x02\x02\x02da\x03\x02\x02\x02e\x16\x03\x02\x02\x02fg\x070\x02\x02" +
		"gh\x070\x02\x02hi\x070\x02\x02is\x07/\x02\x02jk\x070\x02\x02kl\x070\x02" +
		"\x02lm\x070\x02\x02mn\x07\"\x02\x02ns\x07/\x02\x02op\x070\x02\x02pq\x07" +
		"0\x02\x02qs\x07/\x02\x02rf\x03\x02\x02\x02rj\x03\x02\x02\x02ro\x03\x02" +
		"\x02\x02s\x18\x03\x02\x02\x02tu\x07-\x02\x02u\x1A\x03\x02\x02\x02vw\x07" +
		"/\x02\x02w\x1C\x03\x02\x02\x02xy\x07,\x02\x02y\x1E\x03\x02\x02\x02z{\x07" +
		"1\x02\x02{ \x03\x02\x02\x02|}\x07?\x02\x02}\"\x03\x02\x02\x02~\x7F\x07" +
		"u\x02\x02\x7F\x80\x07v\x02\x02\x80\x81\x07t\x02\x02\x81\x82\x07k\x02\x02" +
		"\x82\x83\x07p\x02\x02\x83\x84\x07i\x02\x02\x84$\x03\x02\x02\x02\x85\x86" +
		"\x07f\x02\x02\x86\x87\x07c\x02\x02\x87\x88\x07v\x02\x02\x88\x89\x07g\x02" +
		"\x02\x89&\x03\x02\x02\x02\x8A\x8B\x07i\x02\x02\x8B\x8C\x07t\x02\x02\x8C" +
		"\x8D\x07q\x02\x02\x8D\x8E\x07w\x02\x02\x8E\x8F\x07r\x02\x02\x8F(\x03\x02" +
		"\x02\x02\x90\x91\x07f\x02\x02\x91\x92\x07w\x02\x02\x92\x93\x07t\x02\x02" +
		"\x93\x94\x07c\x02\x02\x94\x95\x07v\x02\x02\x95\x96\x07k\x02\x02\x96\x97" +
		"\x07q\x02\x02\x97\x98\x07p\x02\x02\x98*\x03\x02\x02\x02\x99\x9A\x07x\x02" +
		"\x02\x9A\x9B\x07c\x02\x02\x9B\x9C\x07t\x02\x02\x9C,\x03\x02\x02\x02\x9D" +
		"\x9E\x07%\x02\x02\x9E\xA1\x051\x19\x02\x9F\xA0\x07<\x02\x02\xA0\xA2\x05" +
		"1\x19\x02\xA1\x9F\x03\x02\x02\x02\xA1\xA2\x03\x02\x02\x02\xA2.\x03\x02" +
		"\x02\x02\xA3\xA4\x07B\x02\x02\xA4\xA5\x051\x19\x02\xA50\x03\x02\x02\x02" +
		"\xA6\xA8\t\x02\x02\x02\xA7\xA6\x03\x02\x02\x02\xA8\xA9\x03\x02\x02\x02" +
		"\xA9\xA7\x03\x02\x02\x02\xA9\xAA\x03\x02\x02\x02\xAA2\x03\x02\x02\x02" +
		"\xAB\xAD\x07)\x02\x02\xAC\xAE\n\x03\x02\x02\xAD\xAC\x03\x02\x02\x02\xAE" +
		"\xAF\x03\x02\x02\x02\xAF\xAD\x03\x02\x02\x02\xAF\xB0\x03\x02\x02\x02\xB0" +
		"\xB1\x03\x02\x02\x02\xB1\xB2\x07)\x02\x02\xB24\x03\x02\x02\x02\xB3\xB7" +
		"\x07$\x02\x02\xB4\xB6\n\x04\x02\x02\xB5\xB4\x03\x02\x02\x02\xB6\xB9\x03" +
		"\x02\x02\x02\xB7\xB5\x03\x02\x02\x02\xB7\xB8\x03\x02\x02\x02\xB8\xBA\x03" +
		"\x02\x02\x02\xB9\xB7\x03\x02\x02\x02\xBA\xBB\x07$\x02\x02\xBB6\x03\x02" +
		"\x02\x02\xBC\xBD\x05;\x1E\x02\xBD\xBE\x07a\x02\x02\xBE\xBF\x059\x1D\x02" +
		"\xBF8\x03\x02\x02\x02\xC0\xC4\t\x05\x02\x02\xC1\xC3\t\x06\x02\x02\xC2" +
		"\xC1\x03\x02\x02\x02\xC3\xC6\x03\x02\x02\x02\xC4\xC2\x03\x02\x02\x02\xC4" +
		"\xC5\x03\x02\x02\x02\xC5:\x03\x02\x02\x02\xC6\xC4\x03\x02\x02\x02\xC7" +
		"\xC9\t\x07\x02\x02\xC8\xC7\x03\x02\x02\x02\xC9\xCA\x03\x02\x02\x02\xCA" +
		"\xC8\x03\x02\x02\x02\xCA\xCB\x03\x02\x02\x02\xCB<\x03\x02\x02\x02\xCC" +
		"\xCD\x071\x02\x02\xCD\xCE\x071\x02\x02\xCE\xD2\x03\x02\x02\x02\xCF\xD1" +
		"\n\b\x02\x02\xD0\xCF\x03\x02\x02\x02\xD1\xD4\x03\x02\x02\x02\xD2\xD0\x03" +
		"\x02\x02\x02\xD2\xD3\x03\x02\x02\x02\xD3\xE1\x03\x02\x02\x02\xD4\xD2\x03" +
		"\x02\x02\x02\xD5\xD6\x071\x02\x02\xD6\xD7\x07,\x02\x02\xD7\xDB\x03\x02" +
		"\x02\x02\xD8\xDA\v\x02\x02\x02\xD9\xD8\x03\x02\x02\x02\xDA\xDD\x03\x02" +
		"\x02\x02\xDB\xDC\x03\x02\x02\x02\xDB\xD9\x03\x02\x02\x02\xDC\xDE\x03\x02" +
		"\x02\x02\xDD\xDB\x03\x02\x02\x02\xDE\xDF\x07,\x02\x02\xDF\xE1\x071\x02" +
		"\x02\xE0\xCC\x03\x02\x02\x02\xE0\xD5\x03\x02\x02\x02\xE1\xE2\x03\x02\x02" +
		"\x02\xE2\xE3\b\x1F\x02\x02\xE3>\x03\x02\x02\x02\xE4\xE6\t\t\x02\x02\xE5" +
		"\xE4\x03\x02\x02\x02\xE6\xE7\x03\x02\x02\x02\xE7\xE5\x03\x02\x02\x02\xE7" +
		"\xE8\x03\x02\x02\x02\xE8\xE9\x03\x02\x02\x02\xE9\xEA\b \x02\x02\xEA@\x03" +
		"\x02\x02\x02\x0F\x02dr\xA1\xA9\xAF\xB7\xC4\xCA\xD2\xDB\xE0\xE7\x03\b\x02" +
		"\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!CronoScriptLexer.__ATN) {
			CronoScriptLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(CronoScriptLexer._serializedATN));
		}

		return CronoScriptLexer.__ATN;
	}

}

